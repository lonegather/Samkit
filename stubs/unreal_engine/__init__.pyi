import typing

class UObject:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...
    def __setattr__(*args, **kwargs) -> 'typing.Any': ...
    def __delattr__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_location(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_scale(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_forward(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_right(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_up(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_location(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_rotation(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_scale(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_transform(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_world_offset(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_local_offset(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_world_rotation(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_local_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_world_location(*args, **kwargs) -> 'typing.Any': ...
    def get_world_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_world_scale(*args, **kwargs) -> 'typing.Any': ...
    def get_world_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_relative_location(*args, **kwargs) -> 'typing.Any': ...
    def get_relative_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_relative_scale(*args, **kwargs) -> 'typing.Any': ...
    def get_relative_transform(*args, **kwargs) -> 'typing.Any': ...
    def set_world_location(*args, **kwargs) -> 'typing.Any': ...
    def set_world_rotation(*args, **kwargs) -> 'typing.Any': ...
    def set_world_scale(*args, **kwargs) -> 'typing.Any': ...
    def set_world_transform(*args, **kwargs) -> 'typing.Any': ...
    def set_relative_location(*args, **kwargs) -> 'typing.Any': ...
    def set_relative_rotation(*args, **kwargs) -> 'typing.Any': ...
    def set_relative_scale(*args, **kwargs) -> 'typing.Any': ...
    def set_relative_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_forward_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_up_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_right_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_property(*args, **kwargs) -> 'typing.Any': ...
    def set_property(*args, **kwargs) -> 'typing.Any': ...
    def set_property_flags(*args, **kwargs) -> 'typing.Any': ...
    def add_property_flags(*args, **kwargs) -> 'typing.Any': ...
    def get_property_flags(*args, **kwargs) -> 'typing.Any': ...
    def properties(*args, **kwargs) -> 'typing.Any': ...
    def get_property_class(*args, **kwargs) -> 'typing.Any': ...
    def has_property(*args, **kwargs) -> 'typing.Any': ...
    def get_uproperty(*args, **kwargs) -> 'typing.Any': ...
    def get_property_struct(*args, **kwargs) -> 'typing.Any': ...
    def get_property_array_dim(*args, **kwargs) -> 'typing.Any': ...
    def get_inner(*args, **kwargs) -> 'typing.Any': ...
    def get_key_prop(*args, **kwargs) -> 'typing.Any': ...
    def get_value_prop(*args, **kwargs) -> 'typing.Any': ...
    def functions(*args, **kwargs) -> 'typing.Any': ...
    def is_a(*args, **kwargs) -> 'typing.Any': ...
    def is_valid(*args, **kwargs) -> 'typing.Any': ...
    def is_child_of(*args, **kwargs) -> 'typing.Any': ...
    def call(*args, **kwargs) -> 'typing.Any': ...
    def get_owner(*args, **kwargs) -> 'typing.Any': ...
    def get_outer(*args, **kwargs) -> 'typing.Any': ...
    def set_outer(*args, **kwargs) -> 'typing.Any': ...
    def get_outermost(*args, **kwargs) -> 'typing.Any': ...
    def get_super_class(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def get_display_name(*args, **kwargs) -> 'typing.Any': ...
    def get_path_name(*args, **kwargs) -> 'typing.Any': ...
    def get_full_name(*args, **kwargs) -> 'typing.Any': ...
    def import_custom_properties(*args, **kwargs) -> 'typing.Any': ...
    def can_modify(*args, **kwargs) -> 'typing.Any': ...
    def set_name(*args, **kwargs) -> 'typing.Any': ...
    def bind_event(*args, **kwargs) -> 'typing.Any': ...
    def unbind_event(*args, **kwargs) -> 'typing.Any': ...
    def delegate_bind_ufunction(*args, **kwargs) -> 'typing.Any': ...
    def get_py_proxy(*args, **kwargs) -> 'typing.Any': ...
    def post_edit_change(*args, **kwargs) -> 'typing.Any': ...
    def post_edit_change_property(*args, **kwargs) -> 'typing.Any': ...
    def pre_edit_change(*args, **kwargs) -> 'typing.Any': ...
    def modify(*args, **kwargs) -> 'typing.Any': ...
    def get_thumbnail(*args, **kwargs) -> 'typing.Any': ...
    def render_thumbnail(*args, **kwargs) -> 'typing.Any': ...
    def get_metadata_tag(*args, **kwargs) -> 'typing.Any': ...
    def set_metadata_tag(*args, **kwargs) -> 'typing.Any': ...
    def metadata_tags(*args, **kwargs) -> 'typing.Any': ...
    def has_metadata_tag(*args, **kwargs) -> 'typing.Any': ...
    def remove_metadata_tag(*args, **kwargs) -> 'typing.Any': ...
    def save_config(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_label(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_label(*args, **kwargs) -> 'typing.Any': ...
    def set_actor_hidden_in_game(*args, **kwargs) -> 'typing.Any': ...
    def get_folder_path(*args, **kwargs) -> 'typing.Any': ...
    def set_folder_path(*args, **kwargs) -> 'typing.Any': ...
    def world_create_folder(*args, **kwargs) -> 'typing.Any': ...
    def world_delete_folder(*args, **kwargs) -> 'typing.Any': ...
    def world_rename_folder(*args, **kwargs) -> 'typing.Any': ...
    def world_folders(*args, **kwargs) -> 'typing.Any': ...
    def get_editor_world_counterpart_actor(*args, **kwargs) -> 'typing.Any': ...
    def component_type_registry_invalidate_class(*args, **kwargs) -> 'typing.Any': ...
    def find_actor_by_label(*args, **kwargs) -> 'typing.Any': ...
    def save_package(*args, **kwargs) -> 'typing.Any': ...
    def duplicate(*args, **kwargs) -> 'typing.Any': ...
    def asset_can_reimport(*args, **kwargs) -> 'typing.Any': ...
    def asset_reimport(*args, **kwargs) -> 'typing.Any': ...
    def factory_create_new(*args, **kwargs) -> 'typing.Any': ...
    def factory_import_object(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_call_function(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_custom_event(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_variable_get(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_variable_set(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_dynamic_cast(*args, **kwargs) -> 'typing.Any': ...
    def graph_add_node_event(*args, **kwargs) -> 'typing.Any': ...
    def graph_get_good_place_for_new_node(*args, **kwargs) -> 'typing.Any': ...
    def node_pins(*args, **kwargs) -> 'typing.Any': ...
    def node_get_title(*args, **kwargs) -> 'typing.Any': ...
    def node_find_pin(*args, **kwargs) -> 'typing.Any': ...
    def node_create_pin(*args, **kwargs) -> 'typing.Any': ...
    def node_pin_type_changed(*args, **kwargs) -> 'typing.Any': ...
    def node_pin_default_value_changed(*args, **kwargs) -> 'typing.Any': ...
    def node_function_entry_set_pure(*args, **kwargs) -> 'typing.Any': ...
    def node_allocate_default_pins(*args, **kwargs) -> 'typing.Any': ...
    def node_reconstruct(*args, **kwargs) -> 'typing.Any': ...
    def get_material_graph(*args, **kwargs) -> 'typing.Any': ...
    def struct_add_variable(*args, **kwargs) -> 'typing.Any': ...
    def struct_get_variables(*args, **kwargs) -> 'typing.Any': ...
    def struct_remove_variable(*args, **kwargs) -> 'typing.Any': ...
    def struct_move_variable_up(*args, **kwargs) -> 'typing.Any': ...
    def struct_move_variable_down(*args, **kwargs) -> 'typing.Any': ...
    def data_table_add_row(*args, **kwargs) -> 'typing.Any': ...
    def data_table_remove_row(*args, **kwargs) -> 'typing.Any': ...
    def data_table_rename_row(*args, **kwargs) -> 'typing.Any': ...
    def data_table_as_dict(*args, **kwargs) -> 'typing.Any': ...
    def data_table_as_json(*args, **kwargs) -> 'typing.Any': ...
    def data_table_find_row(*args, **kwargs) -> 'typing.Any': ...
    def data_table_get_all_rows(*args, **kwargs) -> 'typing.Any': ...
    def export_to_file(*args, **kwargs) -> 'typing.Any': ...
    def is_rooted(*args, **kwargs) -> 'typing.Any': ...
    def add_to_root(*args, **kwargs) -> 'typing.Any': ...
    def auto_root(*args, **kwargs) -> 'typing.Any': ...
    def remove_from_root(*args, **kwargs) -> 'typing.Any': ...
    def own(*args, **kwargs) -> 'typing.Any': ...
    def disown(*args, **kwargs) -> 'typing.Any': ...
    def is_owned(*args, **kwargs) -> 'typing.Any': ...
    def find_function(*args, **kwargs) -> 'typing.Any': ...
    def call_function(*args, **kwargs) -> 'typing.Any': ...
    def all_objects(*args, **kwargs) -> 'typing.Any': ...
    def all_actors(*args, **kwargs) -> 'typing.Any': ...
    def package_get_filename(*args, **kwargs) -> 'typing.Any': ...
    def package_is_dirty(*args, **kwargs) -> 'typing.Any': ...
    def make_unique_object_name(*args, **kwargs) -> 'typing.Any': ...
    def asset_import_data(*args, **kwargs) -> 'typing.Any': ...
    def asset_import_data_set_sources(*args, **kwargs) -> 'typing.Any': ...
    def anim_get_skeleton(*args, **kwargs) -> 'typing.Any': ...
    def anim_set_skeleton(*args, **kwargs) -> 'typing.Any': ...
    def get_blend_parameter(*args, **kwargs) -> 'typing.Any': ...
    def set_blend_parameter(*args, **kwargs) -> 'typing.Any': ...
    def get_bone_transform(*args, **kwargs) -> 'typing.Any': ...
    def extract_bone_transform(*args, **kwargs) -> 'typing.Any': ...
    def extract_root_motion(*args, **kwargs) -> 'typing.Any': ...
    def get_raw_animation_data(*args, **kwargs) -> 'typing.Any': ...
    def get_raw_animation_track(*args, **kwargs) -> 'typing.Any': ...
    def add_new_raw_track(*args, **kwargs) -> 'typing.Any': ...
    def update_compressed_track_map_from_raw(*args, **kwargs) -> 'typing.Any': ...
    def update_raw_track(*args, **kwargs) -> 'typing.Any': ...
    def apply_raw_anim_changes(*args, **kwargs) -> 'typing.Any': ...
    def add_key_to_sequence(*args, **kwargs) -> 'typing.Any': ...
    def add_anim_composite_section(*args, **kwargs) -> 'typing.Any': ...
    def vlog(*args, **kwargs) -> 'typing.Any': ...
    def vlog_cylinder(*args, **kwargs) -> 'typing.Any': ...
    def get_static_mesh_bounds(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_build(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_create_body_setup(*args, **kwargs) -> 'typing.Any': ...
    def get_input_axis(*args, **kwargs) -> 'typing.Any': ...
    def bind_input_axis(*args, **kwargs) -> 'typing.Any': ...
    def enable_input(*args, **kwargs) -> 'typing.Any': ...
    def show_mouse_cursor(*args, **kwargs) -> 'typing.Any': ...
    def enable_click_events(*args, **kwargs) -> 'typing.Any': ...
    def enable_mouse_over_events(*args, **kwargs) -> 'typing.Any': ...
    def was_input_key_just_pressed(*args, **kwargs) -> 'typing.Any': ...
    def was_input_key_just_released(*args, **kwargs) -> 'typing.Any': ...
    def is_action_pressed(*args, **kwargs) -> 'typing.Any': ...
    def is_action_released(*args, **kwargs) -> 'typing.Any': ...
    def is_input_key_down(*args, **kwargs) -> 'typing.Any': ...
    def bind_action(*args, **kwargs) -> 'typing.Any': ...
    def bind_axis(*args, **kwargs) -> 'typing.Any': ...
    def bind_key(*args, **kwargs) -> 'typing.Any': ...
    def bind_pressed_key(*args, **kwargs) -> 'typing.Any': ...
    def bind_released_key(*args, **kwargs) -> 'typing.Any': ...
    def input_key(*args, **kwargs) -> 'typing.Any': ...
    def input_axis(*args, **kwargs) -> 'typing.Any': ...
    def hud_draw_2d_line(*args, **kwargs) -> 'typing.Any': ...
    def hud_draw_line(*args, **kwargs) -> 'typing.Any': ...
    def hud_draw_texture(*args, **kwargs) -> 'typing.Any': ...
    def hud_draw_rect(*args, **kwargs) -> 'typing.Any': ...
    def hud_draw_text(*args, **kwargs) -> 'typing.Any': ...
    def add_controller_pitch_input(*args, **kwargs) -> 'typing.Any': ...
    def add_controller_yaw_input(*args, **kwargs) -> 'typing.Any': ...
    def add_controller_roll_input(*args, **kwargs) -> 'typing.Any': ...
    def get_control_rotation(*args, **kwargs) -> 'typing.Any': ...
    def add_movement_input(*args, **kwargs) -> 'typing.Any': ...
    def jump(*args, **kwargs) -> 'typing.Any': ...
    def stop_jumping(*args, **kwargs) -> 'typing.Any': ...
    def crouch(*args, **kwargs) -> 'typing.Any': ...
    def uncrouch(*args, **kwargs) -> 'typing.Any': ...
    def launch(*args, **kwargs) -> 'typing.Any': ...
    def is_jumping(*args, **kwargs) -> 'typing.Any': ...
    def is_crouched(*args, **kwargs) -> 'typing.Any': ...
    def is_falling(*args, **kwargs) -> 'typing.Any': ...
    def is_flying(*args, **kwargs) -> 'typing.Any': ...
    def can_jump(*args, **kwargs) -> 'typing.Any': ...
    def can_crouch(*args, **kwargs) -> 'typing.Any': ...
    def get_class(*args, **kwargs) -> 'typing.Any': ...
    def class_generated_by(*args, **kwargs) -> 'typing.Any': ...
    def class_get_flags(*args, **kwargs) -> 'typing.Any': ...
    def class_set_flags(*args, **kwargs) -> 'typing.Any': ...
    def get_obj_flags(*args, **kwargs) -> 'typing.Any': ...
    def set_obj_flags(*args, **kwargs) -> 'typing.Any': ...
    def clear_obj_flags(*args, **kwargs) -> 'typing.Any': ...
    def reset_obj_flags(*args, **kwargs) -> 'typing.Any': ...
    def class_get_config_name(*args, **kwargs) -> 'typing.Any': ...
    def class_set_config_name(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_components(*args, **kwargs) -> 'typing.Any': ...
    def components(*args, **kwargs) -> 'typing.Any': ...
    def get_components(*args, **kwargs) -> 'typing.Any': ...
    def component_is_registered(*args, **kwargs) -> 'typing.Any': ...
    def register_component(*args, **kwargs) -> 'typing.Any': ...
    def unregister_component(*args, **kwargs) -> 'typing.Any': ...
    def destroy_component(*args, **kwargs) -> 'typing.Any': ...
    def actor_destroy_component(*args, **kwargs) -> 'typing.Any': ...
    def destroy_actor_component(*args, **kwargs) -> 'typing.Any': ...
    def actor_create_default_subobject(*args, **kwargs) -> 'typing.Any': ...
    def create_default_subobject(*args, **kwargs) -> 'typing.Any': ...
    def actor_begin_play(*args, **kwargs) -> 'typing.Any': ...
    def broadcast(*args, **kwargs) -> 'typing.Any': ...
    def get_metadata(*args, **kwargs) -> 'typing.Any': ...
    def set_metadata(*args, **kwargs) -> 'typing.Any': ...
    def has_metadata(*args, **kwargs) -> 'typing.Any': ...
    def quit_game(*args, **kwargs) -> 'typing.Any': ...
    def play(*args, **kwargs) -> 'typing.Any': ...
    def get_world_type(*args, **kwargs) -> 'typing.Any': ...
    def world_exec(*args, **kwargs) -> 'typing.Any': ...
    def simple_move_to_location(*args, **kwargs) -> 'typing.Any': ...
    def actor_has_component_of_type(*args, **kwargs) -> 'typing.Any': ...
    def actor_destroy(*args, **kwargs) -> 'typing.Any': ...
    def actor_spawn(*args, **kwargs) -> 'typing.Any': ...
    def actor_has_tag(*args, **kwargs) -> 'typing.Any': ...
    def component_has_tag(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_bounds(*args, **kwargs) -> 'typing.Any': ...
    def line_trace_single_by_channel(*args, **kwargs) -> 'typing.Any': ...
    def line_trace_multi_by_channel(*args, **kwargs) -> 'typing.Any': ...
    def get_hit_result_under_cursor(*args, **kwargs) -> 'typing.Any': ...
    def draw_debug_line(*args, **kwargs) -> 'typing.Any': ...
    def destructible_apply_damage(*args, **kwargs) -> 'typing.Any': ...
    def set_view_target(*args, **kwargs) -> 'typing.Any': ...
    def get_world_delta_seconds(*args, **kwargs) -> 'typing.Any': ...
    def get_levels(*args, **kwargs) -> 'typing.Any': ...
    def get_current_level(*args, **kwargs) -> 'typing.Any': ...
    def set_current_level(*args, **kwargs) -> 'typing.Any': ...
    def get_level_script_blueprint(*args, **kwargs) -> 'typing.Any': ...
    def add_foliage_asset(*args, **kwargs) -> 'typing.Any': ...
    def get_foliage_instances(*args, **kwargs) -> 'typing.Any': ...
    def get_instanced_foliage_actor_for_current_level(*args, **kwargs) -> 'typing.Any': ...
    def get_instanced_foliage_actor_for_level(*args, **kwargs) -> 'typing.Any': ...
    def get_foliage_types(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_component(*args, **kwargs) -> 'typing.Any': ...
    def add_instance_component(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_root_component(*args, **kwargs) -> 'typing.Any': ...
    def add_actor_root_component(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_component_by_type(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_component_by_class(*args, **kwargs) -> 'typing.Any': ...
    def get_component_by_type(*args, **kwargs) -> 'typing.Any': ...
    def get_component_by_class(*args, **kwargs) -> 'typing.Any': ...
    def get_component(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_component(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_components_by_type(*args, **kwargs) -> 'typing.Any': ...
    def get_components_by_type(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_components_by_class(*args, **kwargs) -> 'typing.Any': ...
    def get_components_by_class(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_components_by_tag(*args, **kwargs) -> 'typing.Any': ...
    def get_components_by_tag(*args, **kwargs) -> 'typing.Any': ...
    def add_python_component(*args, **kwargs) -> 'typing.Any': ...
    def set_simulate_physics(*args, **kwargs) -> 'typing.Any': ...
    def add_impulse(*args, **kwargs) -> 'typing.Any': ...
    def add_angular_impulse(*args, **kwargs) -> 'typing.Any': ...
    def add_force(*args, **kwargs) -> 'typing.Any': ...
    def add_torque(*args, **kwargs) -> 'typing.Any': ...
    def set_physics_linear_velocity(*args, **kwargs) -> 'typing.Any': ...
    def get_physics_linear_velocity(*args, **kwargs) -> 'typing.Any': ...
    def set_physics_angular_velocity(*args, **kwargs) -> 'typing.Any': ...
    def get_physics_angular_velocity(*args, **kwargs) -> 'typing.Any': ...
    def find_object(*args, **kwargs) -> 'typing.Any': ...
    def get_world(*args, **kwargs) -> 'typing.Any': ...
    def has_world(*args, **kwargs) -> 'typing.Any': ...
    def get_game_viewport(*args, **kwargs) -> 'typing.Any': ...
    def game_viewport_client_set_rendering_flag(*args, **kwargs) -> 'typing.Any': ...
    def get_world_location_at_distance_along_spline(*args, **kwargs) -> 'typing.Any': ...
    def get_spline_length(*args, **kwargs) -> 'typing.Any': ...
    def game_viewport_client_get_window(*args, **kwargs) -> 'typing.Any': ...
    def take_widget(*args, **kwargs) -> 'typing.Any': ...
    def create_widget(*args, **kwargs) -> 'typing.Any': ...
    def set_slate_widget(*args, **kwargs) -> 'typing.Any': ...
    def get_actor_velocity(*args, **kwargs) -> 'typing.Any': ...
    def play_sound_at_location(*args, **kwargs) -> 'typing.Any': ...
    def queue_audio(*args, **kwargs) -> 'typing.Any': ...
    def reset_audio(*args, **kwargs) -> 'typing.Any': ...
    def get_available_audio_byte_count(*args, **kwargs) -> 'typing.Any': ...
    def sound_get_data(*args, **kwargs) -> 'typing.Any': ...
    def sound_set_data(*args, **kwargs) -> 'typing.Any': ...
    def world_tick(*args, **kwargs) -> 'typing.Any': ...
    def conditional_begin_destroy(*args, **kwargs) -> 'typing.Any': ...
    def create_landscape_info(*args, **kwargs) -> 'typing.Any': ...
    def get_landscape_info(*args, **kwargs) -> 'typing.Any': ...
    def landscape_import(*args, **kwargs) -> 'typing.Any': ...
    def landscape_export_to_raw_mesh(*args, **kwargs) -> 'typing.Any': ...
    def create_player(*args, **kwargs) -> 'typing.Any': ...
    def get_num_players(*args, **kwargs) -> 'typing.Any': ...
    def get_num_spectators(*args, **kwargs) -> 'typing.Any': ...
    def get_player_controller(*args, **kwargs) -> 'typing.Any': ...
    def get_player_hud(*args, **kwargs) -> 'typing.Any': ...
    def set_player_hud(*args, **kwargs) -> 'typing.Any': ...
    def get_player_camera_manager(*args, **kwargs) -> 'typing.Any': ...
    def get_player_pawn(*args, **kwargs) -> 'typing.Any': ...
    def restart_level(*args, **kwargs) -> 'typing.Any': ...
    def get_overlapping_actors(*args, **kwargs) -> 'typing.Any': ...
    def actor_set_level_sequence(*args, **kwargs) -> 'typing.Any': ...
    def capture_initialize(*args, **kwargs) -> 'typing.Any': ...
    def capture_start(*args, **kwargs) -> 'typing.Any': ...
    def capture_stop(*args, **kwargs) -> 'typing.Any': ...
    def capture_load_from_config(*args, **kwargs) -> 'typing.Any': ...
    def set_level_sequence_asset(*args, **kwargs) -> 'typing.Any': ...
    def get_controller(*args, **kwargs) -> 'typing.Any': ...
    def posses(*args, **kwargs) -> 'typing.Any': ...
    def unposses(*args, **kwargs) -> 'typing.Any': ...
    def get_hud(*args, **kwargs) -> 'typing.Any': ...
    def get_controlled_pawn(*args, **kwargs) -> 'typing.Any': ...
    def get_pawn(*args, **kwargs) -> 'typing.Any': ...
    def project_world_location_to_screen(*args, **kwargs) -> 'typing.Any': ...
    def get_socket_location(*args, **kwargs) -> 'typing.Any': ...
    def get_socket_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_socket_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_socket_world_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_socket_actor_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_attached_actors(*args, **kwargs) -> 'typing.Any': ...
    def get_all_child_actors(*args, **kwargs) -> 'typing.Any': ...
    def attach_to_actor(*args, **kwargs) -> 'typing.Any': ...
    def attach_to_component(*args, **kwargs) -> 'typing.Any': ...
    def get_anim_instance(*args, **kwargs) -> 'typing.Any': ...
    def set_skeletal_mesh(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_get_parent_index(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_bones_get_num(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_get_bone_name(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_find_bone_index(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_get_ref_bone_pose(*args, **kwargs) -> 'typing.Any': ...
    def skeleton_add_bone(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_set_soft_vertices(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_soft_vertices(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_lod(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_raw_indices(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_set_skeleton(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_bone_map(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_set_bone_map(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_set_active_bone_indices(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_set_required_bones(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_active_bone_indices(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_get_required_bones(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_lods_num(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_sections_num(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_build_lod(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_register_morph_target(*args, **kwargs) -> 'typing.Any': ...
    def skeletal_mesh_to_import_vertex_map(*args, **kwargs) -> 'typing.Any': ...
    def morph_target_populate_deltas(*args, **kwargs) -> 'typing.Any': ...
    def morph_target_get_deltas(*args, **kwargs) -> 'typing.Any': ...
    def set_timer(*args, **kwargs) -> 'typing.Any': ...
    def texture_get_data(*args, **kwargs) -> 'typing.Any': ...
    def texture_set_data(*args, **kwargs) -> 'typing.Any': ...
    def texture_get_width(*args, **kwargs) -> 'typing.Any': ...
    def texture_get_height(*args, **kwargs) -> 'typing.Any': ...
    def texture_has_alpha_channel(*args, **kwargs) -> 'typing.Any': ...
    def render_target_get_data(*args, **kwargs) -> 'typing.Any': ...
    def render_target_get_data_to_buffer(*args, **kwargs) -> 'typing.Any': ...
    def texture_update_resource(*args, **kwargs) -> 'typing.Any': ...
    def texture_get_source_data(*args, **kwargs) -> 'typing.Any': ...
    def texture_set_source_data(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_master_tracks(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_possessable_tracks(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_get_camera_cut_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_set_playback_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_set_view_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_set_working_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_set_section_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_get_playback_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_get_selection_range(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_folders(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_create_folder(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_set_display_name(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_get_display_name(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_changed(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_camera_cut_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_actor(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_actor_component(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_make_new_spawnable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_possessable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_track_add_section(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_section_add_key(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_remove_possessable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_remove_spawnable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_remove_camera_cut_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_remove_master_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_remove_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_import_fbx_transform(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_sections(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_track_sections(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_possessables(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_possessables_guid(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_find_possessable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_find_spawnable(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_master_track(*args, **kwargs) -> 'typing.Any': ...
    def sequencer_add_track(*args, **kwargs) -> 'typing.Any': ...
    def set_material(*args, **kwargs) -> 'typing.Any': ...
    def set_material_by_name(*args, **kwargs) -> 'typing.Any': ...
    def set_material_scalar_parameter(*args, **kwargs) -> 'typing.Any': ...
    def set_material_static_switch_parameter(*args, **kwargs) -> 'typing.Any': ...
    def set_material_vector_parameter(*args, **kwargs) -> 'typing.Any': ...
    def set_material_texture_parameter(*args, **kwargs) -> 'typing.Any': ...
    def get_material_scalar_parameter(*args, **kwargs) -> 'typing.Any': ...
    def get_material_vector_parameter(*args, **kwargs) -> 'typing.Any': ...
    def get_material_texture_parameter(*args, **kwargs) -> 'typing.Any': ...
    def get_material_static_switch_parameter(*args, **kwargs) -> 'typing.Any': ...
    def create_material_instance_dynamic(*args, **kwargs) -> 'typing.Any': ...
    def set_material_parent(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_set_collision_for_lod(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_set_shadow_for_lod(*args, **kwargs) -> 'typing.Any': ...
    def get_raw_mesh(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_generate_kdop10x(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_generate_kdop10y(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_generate_kdop10z(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_generate_kdop18(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_generate_kdop26(*args, **kwargs) -> 'typing.Any': ...
    def static_mesh_import_lod(*args, **kwargs) -> 'typing.Any': ...
    def add_viewport_widget_content(*args, **kwargs) -> 'typing.Any': ...
    def remove_viewport_widget_content(*args, **kwargs) -> 'typing.Any': ...
    def remove_all_viewport_widgets(*args, **kwargs) -> 'typing.Any': ...
    def add_function(*args, **kwargs) -> 'typing.Any': ...
    def add_property(*args, **kwargs) -> 'typing.Any': ...
    def as_dict(*args, **kwargs) -> 'typing.Any': ...
    def get_cdo(*args, **kwargs) -> 'typing.Any': ...
    def get_archetype(*args, **kwargs) -> 'typing.Any': ...
    def get_archetype_instances(*args, **kwargs) -> 'typing.Any': ...
    def enum_values(*args, **kwargs) -> 'typing.Any': ...
    def enum_names(*args, **kwargs) -> 'typing.Any': ...
    def enum_user_defined_names(*args, **kwargs) -> 'typing.Any': ...
    def to_bytes(*args, **kwargs) -> 'typing.Any': ...
    def to_bytearray(*args, **kwargs) -> 'typing.Any': ...
    def from_bytes(*args, **kwargs) -> 'typing.Any': ...



def log(*args, **kwargs) -> 'typing.Any': ...

def log_warning(*args, **kwargs) -> 'typing.Any': ...

def log_error(*args, **kwargs) -> 'typing.Any': ...

def shutdown(*args, **kwargs) -> 'typing.Any': ...

def set_brutal_finalize(*args, **kwargs) -> 'typing.Any': ...

def add_on_screen_debug_message(*args, **kwargs) -> 'typing.Any': ...

def print_string(*args, **kwargs) -> 'typing.Any': ...

def set_random_seed(*args, **kwargs) -> 'typing.Any': ...

def find_class(*args, **kwargs) -> 'typing.Any': ...

def find_struct(*args, **kwargs) -> 'typing.Any': ...

def find_enum(*args, **kwargs) -> 'typing.Any': ...

def load_class(*args, **kwargs) -> 'typing.Any': ...

def load_struct(*args, **kwargs) -> 'typing.Any': ...

def load_enum(*args, **kwargs) -> 'typing.Any': ...

def find_object(*args, **kwargs) -> 'typing.Any': ...

def load_object(*args, **kwargs) -> 'typing.Any': ...

def load_package(*args, **kwargs) -> 'typing.Any': ...

def unload_package(*args, **kwargs) -> 'typing.Any': ...

def get_package_filename(*args, **kwargs) -> 'typing.Any': ...

def get_forward_vector(*args, **kwargs) -> 'typing.Any': ...

def get_up_vector(*args, **kwargs) -> 'typing.Any': ...

def get_right_vector(*args, **kwargs) -> 'typing.Any': ...

def get_content_dir(*args, **kwargs) -> 'typing.Any': ...

def get_game_saved_dir(*args, **kwargs) -> 'typing.Any': ...

def get_game_user_developer_dir(*args, **kwargs) -> 'typing.Any': ...

def convert_relative_path_to_full(*args, **kwargs) -> 'typing.Any': ...

def get_path(*args, **kwargs) -> 'typing.Any': ...

def get_base_filename(*args, **kwargs) -> 'typing.Any': ...

def object_path_to_package_name(*args, **kwargs) -> 'typing.Any': ...

def compress_image_array(*args, **kwargs) -> 'typing.Any': ...

def create_checkerboard_texture(*args, **kwargs) -> 'typing.Any': ...

def create_transient_texture(*args, **kwargs) -> 'typing.Any': ...

def create_transient_texture_render_target2d(*args, **kwargs) -> 'typing.Any': ...

def create_texture(*args, **kwargs) -> 'typing.Any': ...

def create_world(*args, **kwargs) -> 'typing.Any': ...

def create_package(*args, **kwargs) -> 'typing.Any': ...

def get_or_create_package(*args, **kwargs) -> 'typing.Any': ...

def get_transient_package(*args, **kwargs) -> 'typing.Any': ...

def open_file_dialog(*args, **kwargs) -> 'typing.Any': ...

def save_file_dialog(*args, **kwargs) -> 'typing.Any': ...

def open_directory_dialog(*args, **kwargs) -> 'typing.Any': ...

def open_font_dialog(*args, **kwargs) -> 'typing.Any': ...

def find_slate_style(*args, **kwargs) -> 'typing.Any': ...

def find_icon_for_class(*args, **kwargs) -> 'typing.Any': ...

def register_nomad_tab_spawner(*args, **kwargs) -> 'typing.Any': ...

def unregister_nomad_tab_spawner(*args, **kwargs) -> 'typing.Any': ...

def invoke_tab(*args, **kwargs) -> 'typing.Any': ...

def get_swidget_from_wrapper(*args, **kwargs) -> 'typing.Any': ...

def create_wrapper_from_pyswidget(*args, **kwargs) -> 'typing.Any': ...

def get_editor_window(*args, **kwargs) -> 'typing.Any': ...

def add_menu_extension(*args, **kwargs) -> 'typing.Any': ...

def add_menu_bar_extension(*args, **kwargs) -> 'typing.Any': ...

def add_tool_bar_extension(*args, **kwargs) -> 'typing.Any': ...

def add_asset_view_context_menu_extension(*args, **kwargs) -> 'typing.Any': ...

def redraw_all_viewports(*args, **kwargs) -> 'typing.Any': ...

def update_ui(*args, **kwargs) -> 'typing.Any': ...

def create_detail_view(*args, **kwargs) -> 'typing.Any': ...

def create_structure_detail_view(*args, **kwargs) -> 'typing.Any': ...

def create_property_view(*args, **kwargs) -> 'typing.Any': ...

def open_editor_for_asset(*args, **kwargs) -> 'typing.Any': ...

def find_editor_for_asset(*args, **kwargs) -> 'typing.Any': ...

def get_all_edited_assets(*args, **kwargs) -> 'typing.Any': ...

def close_editor_for_asset(*args, **kwargs) -> 'typing.Any': ...

def close_all_asset_editors(*args, **kwargs) -> 'typing.Any': ...

def allow_actor_script_execution_in_editor(*args, **kwargs) -> 'typing.Any': ...

def get_editor_world(*args, **kwargs) -> 'typing.Any': ...

def console_exec(*args, **kwargs) -> 'typing.Any': ...

def editor_get_selected_actors(*args, **kwargs) -> 'typing.Any': ...

def editor_select_actor(*args, **kwargs) -> 'typing.Any': ...

def editor_deselect_actors(*args, **kwargs) -> 'typing.Any': ...

def import_asset(*args, **kwargs) -> 'typing.Any': ...

def export_assets(*args, **kwargs) -> 'typing.Any': ...

def get_asset(*args, **kwargs) -> 'typing.Any': ...

def find_asset(*args, **kwargs) -> 'typing.Any': ...

def create_asset(*args, **kwargs) -> 'typing.Any': ...

def delete_object(*args, **kwargs) -> 'typing.Any': ...

def get_assets(*args, **kwargs) -> 'typing.Any': ...

def get_selected_assets(*args, **kwargs) -> 'typing.Any': ...

def get_assets_by_class(*args, **kwargs) -> 'typing.Any': ...

def is_loading_assets(*args, **kwargs) -> 'typing.Any': ...

def wait_for_assets(*args, **kwargs) -> 'typing.Any': ...

def sync_browser_to_assets(*args, **kwargs) -> 'typing.Any': ...

def get_asset_referencers(*args, **kwargs) -> 'typing.Any': ...

def get_asset_identifier_referencers(*args, **kwargs) -> 'typing.Any': ...

def get_asset_dependencies(*args, **kwargs) -> 'typing.Any': ...

def rename_asset(*args, **kwargs) -> 'typing.Any': ...

def duplicate_asset(*args, **kwargs) -> 'typing.Any': ...

def delete_asset(*args, **kwargs) -> 'typing.Any': ...

def get_long_package_path(*args, **kwargs) -> 'typing.Any': ...

def get_long_package_asset_name(*args, **kwargs) -> 'typing.Any': ...

def editor_command_build(*args, **kwargs) -> 'typing.Any': ...

def editor_command_build_lighting(*args, **kwargs) -> 'typing.Any': ...

def editor_command_save_current_level(*args, **kwargs) -> 'typing.Any': ...

def editor_command_save_all_levels(*args, **kwargs) -> 'typing.Any': ...

def editor_save_all(*args, **kwargs) -> 'typing.Any': ...

def get_discovered_plugins(*args, **kwargs) -> 'typing.Any': ...

def get_enabled_plugins(*args, **kwargs) -> 'typing.Any': ...

def find_plugin(*args, **kwargs) -> 'typing.Any': ...

def string_to_guid(*args, **kwargs) -> 'typing.Any': ...

def new_guid(*args, **kwargs) -> 'typing.Any': ...

def guid_to_string(*args, **kwargs) -> 'typing.Any': ...

def heightmap_expand(*args, **kwargs) -> 'typing.Any': ...

def heightmap_import(*args, **kwargs) -> 'typing.Any': ...

def play_preview_sound(*args, **kwargs) -> 'typing.Any': ...

def get_assets_by_filter(*args, **kwargs) -> 'typing.Any': ...

def create_blueprint(*args, **kwargs) -> 'typing.Any': ...

def create_blueprint_from_actor(*args, **kwargs) -> 'typing.Any': ...

def replace_blueprint(*args, **kwargs) -> 'typing.Any': ...

def get_blueprint_hierarchy_from_class(*args, **kwargs) -> 'typing.Any': ...

def reload_blueprint(*args, **kwargs) -> 'typing.Any': ...

def compile_blueprint(*args, **kwargs) -> 'typing.Any': ...

def blueprint_add_member_variable(*args, **kwargs) -> 'typing.Any': ...

def blueprint_add_event_dispatcher(*args, **kwargs) -> 'typing.Any': ...

def blueprint_add_new_timeline(*args, **kwargs) -> 'typing.Any': ...

def blueprint_set_variable_visibility(*args, **kwargs) -> 'typing.Any': ...

def blueprint_add_function(*args, **kwargs) -> 'typing.Any': ...

def blueprint_add_ubergraph_page(*args, **kwargs) -> 'typing.Any': ...

def blueprint_get_all_graphs(*args, **kwargs) -> 'typing.Any': ...

def blueprint_mark_as_structurally_modified(*args, **kwargs) -> 'typing.Any': ...

def add_component_to_blueprint(*args, **kwargs) -> 'typing.Any': ...

def get_blueprint_components(*args, **kwargs) -> 'typing.Any': ...

def create_material_instance(*args, **kwargs) -> 'typing.Any': ...

def message_dialog_open(*args, **kwargs) -> 'typing.Any': ...

def create_modal_save_asset_dialog(*args, **kwargs) -> 'typing.Any': ...

def set_fbx_import_option(*args, **kwargs) -> 'typing.Any': ...

def create_new_graph(*args, **kwargs) -> 'typing.Any': ...

def editor_play(*args, **kwargs) -> 'typing.Any': ...

def add_level_to_world(*args, **kwargs) -> 'typing.Any': ...

def move_selected_actors_to_level(*args, **kwargs) -> 'typing.Any': ...

def move_actor_to_level(*args, **kwargs) -> 'typing.Any': ...

def editor_on_asset_post_import(*args, **kwargs) -> 'typing.Any': ...

def on_main_frame_creation_finished(*args, **kwargs) -> 'typing.Any': ...

def begin_transaction(*args, **kwargs) -> 'typing.Any': ...

def cancel_transaction(*args, **kwargs) -> 'typing.Any': ...

def end_transaction(*args, **kwargs) -> 'typing.Any': ...

def get_transaction_name(*args, **kwargs) -> 'typing.Any': ...

def is_transaction_active(*args, **kwargs) -> 'typing.Any': ...

def redo_transaction(*args, **kwargs) -> 'typing.Any': ...

def reset_transaction(*args, **kwargs) -> 'typing.Any': ...

def transactions(*args, **kwargs) -> 'typing.Any': ...

def editor_undo(*args, **kwargs) -> 'typing.Any': ...

def editor_redo(*args, **kwargs) -> 'typing.Any': ...

def editor_tick(*args, **kwargs) -> 'typing.Any': ...

def engine_tick(*args, **kwargs) -> 'typing.Any': ...

def tick_rendering_tickables(*args, **kwargs) -> 'typing.Any': ...

def all_viewport_clients(*args, **kwargs) -> 'typing.Any': ...

def slate_tick(*args, **kwargs) -> 'typing.Any': ...

def get_delta_time(*args, **kwargs) -> 'typing.Any': ...

def new_object(*args, **kwargs) -> 'typing.Any': ...

def get_mutable_default(*args, **kwargs) -> 'typing.Any': ...

def all_classes(*args, **kwargs) -> 'typing.Any': ...

def all_worlds(*args, **kwargs) -> 'typing.Any': ...

def tobject_iterator(*args, **kwargs) -> 'typing.Any': ...

def new_class(*args, **kwargs) -> 'typing.Any': ...

def create_and_dispatch_when_ready(*args, **kwargs) -> 'typing.Any': ...

def add_ticker(*args, **kwargs) -> 'typing.Any': ...

def remove_ticker(*args, **kwargs) -> 'typing.Any': ...

def py_gc(*args, **kwargs) -> 'typing.Any': ...

def exec(*args, **kwargs) -> 'typing.Any': ...

def py_exec(*args, **kwargs) -> 'typing.Any': ...

def get_engine_defined_action_mappings(*args, **kwargs) -> 'typing.Any': ...

def get_viewport_screenshot(*args, **kwargs) -> 'typing.Any': ...

def get_viewport_size(*args, **kwargs) -> 'typing.Any': ...

def get_resolution(*args, **kwargs) -> 'typing.Any': ...

def get_game_viewport_size(*args, **kwargs) -> 'typing.Any': ...

def get_game_viewport_client(*args, **kwargs) -> 'typing.Any': ...

def open_color_picker(*args, **kwargs) -> 'typing.Any': ...

def destroy_color_picker(*args, **kwargs) -> 'typing.Any': ...

def play_sound(*args, **kwargs) -> 'typing.Any': ...

def editor_play_in_viewport(*args, **kwargs) -> 'typing.Any': ...

def request_play_session(*args, **kwargs) -> 'typing.Any': ...

def get_editor_pie_game_viewport_client(*args, **kwargs) -> 'typing.Any': ...

def editor_get_active_viewport_screenshot(*args, **kwargs) -> 'typing.Any': ...

def editor_get_pie_viewport_screenshot(*args, **kwargs) -> 'typing.Any': ...

def editor_set_view_mode(*args, **kwargs) -> 'typing.Any': ...

def editor_set_camera_speed(*args, **kwargs) -> 'typing.Any': ...

def editor_set_view_location(*args, **kwargs) -> 'typing.Any': ...

def editor_set_view_rotation(*args, **kwargs) -> 'typing.Any': ...

def editor_get_active_viewport_size(*args, **kwargs) -> 'typing.Any': ...

def editor_get_pie_viewport_size(*args, **kwargs) -> 'typing.Any': ...

def editor_take_high_res_screen_shots(*args, **kwargs) -> 'typing.Any': ...

def register_settings(*args, **kwargs) -> 'typing.Any': ...

def show_viewer(*args, **kwargs) -> 'typing.Any': ...

def unregister_settings(*args, **kwargs) -> 'typing.Any': ...

def in_editor_capture(*args, **kwargs) -> 'typing.Any': ...

def clipboard_copy(*args, **kwargs) -> 'typing.Any': ...

def clipboard_paste(*args, **kwargs) -> 'typing.Any': ...

def copy_properties_for_unrelated_objects(*args, **kwargs) -> 'typing.Any': ...

class FVector:
    def __lt__(*args, **kwargs) -> 'typing.Any': ...
    def __le__(*args, **kwargs) -> 'typing.Any': ...
    def __eq__(*args, **kwargs) -> 'typing.Any': ...
    def __ne__(*args, **kwargs) -> 'typing.Any': ...
    def __gt__(*args, **kwargs) -> 'typing.Any': ...
    def __ge__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __sub__(*args, **kwargs) -> 'typing.Any': ...
    def __rsub__(*args, **kwargs) -> 'typing.Any': ...
    def __mul__(*args, **kwargs) -> 'typing.Any': ...
    def __rmul__(*args, **kwargs) -> 'typing.Any': ...
    def __floordiv__(*args, **kwargs) -> 'typing.Any': ...
    def __rfloordiv__(*args, **kwargs) -> 'typing.Any': ...
    def __truediv__(*args, **kwargs) -> 'typing.Any': ...
    def __rtruediv__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def length(*args, **kwargs) -> 'typing.Any': ...
    def size(*args, **kwargs) -> 'typing.Any': ...
    def size_squared(*args, **kwargs) -> 'typing.Any': ...
    def length_squared(*args, **kwargs) -> 'typing.Any': ...
    def normalized(*args, **kwargs) -> 'typing.Any': ...
    def rotation(*args, **kwargs) -> 'typing.Any': ...
    def dot(*args, **kwargs) -> 'typing.Any': ...
    def cross(*args, **kwargs) -> 'typing.Any': ...
    def project_on_to(*args, **kwargs) -> 'typing.Any': ...
    def project_on_to_normal(*args, **kwargs) -> 'typing.Any': ...
    x: 'typing.Any'
    y: 'typing.Any'
    z: 'typing.Any'
    forward: 'FVector'
    right: 'FVector'
    up: 'FVector'



class FVector2D:
    def __lt__(*args, **kwargs) -> 'typing.Any': ...
    def __le__(*args, **kwargs) -> 'typing.Any': ...
    def __eq__(*args, **kwargs) -> 'typing.Any': ...
    def __ne__(*args, **kwargs) -> 'typing.Any': ...
    def __gt__(*args, **kwargs) -> 'typing.Any': ...
    def __ge__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __sub__(*args, **kwargs) -> 'typing.Any': ...
    def __rsub__(*args, **kwargs) -> 'typing.Any': ...
    def __mul__(*args, **kwargs) -> 'typing.Any': ...
    def __rmul__(*args, **kwargs) -> 'typing.Any': ...
    def __floordiv__(*args, **kwargs) -> 'typing.Any': ...
    def __rfloordiv__(*args, **kwargs) -> 'typing.Any': ...
    def __truediv__(*args, **kwargs) -> 'typing.Any': ...
    def __rtruediv__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def length(*args, **kwargs) -> 'typing.Any': ...
    def size(*args, **kwargs) -> 'typing.Any': ...
    def size_squared(*args, **kwargs) -> 'typing.Any': ...
    def length_squared(*args, **kwargs) -> 'typing.Any': ...
    def normalized(*args, **kwargs) -> 'typing.Any': ...
    def dot(*args, **kwargs) -> 'typing.Any': ...
    def cross(*args, **kwargs) -> 'typing.Any': ...
    x: 'typing.Any'
    y: 'typing.Any'



class FRotator:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __sub__(*args, **kwargs) -> 'typing.Any': ...
    def __rsub__(*args, **kwargs) -> 'typing.Any': ...
    def __mul__(*args, **kwargs) -> 'typing.Any': ...
    def __rmul__(*args, **kwargs) -> 'typing.Any': ...
    def __divmod__(*args, **kwargs) -> 'typing.Any': ...
    def __rdivmod__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def get_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_euler(*args, **kwargs) -> 'typing.Any': ...
    def normalized(*args, **kwargs) -> 'typing.Any': ...
    def inversed(*args, **kwargs) -> 'typing.Any': ...
    def quaternion(*args, **kwargs) -> 'typing.Any': ...
    pitch: 'typing.Any'
    yaw: 'typing.Any'
    roll: 'typing.Any'



class FTransform:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __mul__(*args, **kwargs) -> 'typing.Any': ...
    def __rmul__(*args, **kwargs) -> 'typing.Any': ...
    def inverse(*args, **kwargs) -> 'typing.Any': ...
    def get_relative_transform(*args, **kwargs) -> 'typing.Any': ...
    def normalize_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_matrix(*args, **kwargs) -> 'typing.Any': ...
    def transform_vector(*args, **kwargs) -> 'typing.Any': ...
    def transform_vector_no_scale(*args, **kwargs) -> 'typing.Any': ...
    def transform_position(*args, **kwargs) -> 'typing.Any': ...
    def transform_position_no_scale(*args, **kwargs) -> 'typing.Any': ...
    def transform_rotation(*args, **kwargs) -> 'typing.Any': ...
    translation: 'typing.Any'
    scale: 'typing.Any'
    rotation: 'typing.Any'
    quaternion: 'typing.Any'



class FHitResult:
    def get_reversed_hit(*args, **kwargs) -> 'typing.Any': ...
    location: 'typing.Any'
    normal: 'typing.Any'
    actor: 'typing.Any'
    distance: 'typing.Any'
    impact_point: 'typing.Any'
    impact_normal: 'typing.Any'
    time: 'typing.Any'
    bone_name: 'typing.Any'



class FColor:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def to_hex(*args, **kwargs) -> 'typing.Any': ...
    def to_linear(*args, **kwargs) -> 'typing.Any': ...
    r: 'typing.Any'
    g: 'typing.Any'
    b: 'typing.Any'
    a: 'typing.Any'
    Black: 'FColor'
    Blue: 'FColor'
    Cyan: 'FColor'
    Emerald: 'FColor'
    Green: 'FColor'
    Magenta: 'FColor'
    Orange: 'FColor'
    Purple: 'FColor'
    Red: 'FColor'
    Silver: 'FColor'
    Turquoise: 'FColor'
    White: 'FColor'
    Yellow: 'FColor'



class FLinearColor:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def to_fcolor(*args, **kwargs) -> 'typing.Any': ...
    r: 'typing.Any'
    g: 'typing.Any'
    b: 'typing.Any'
    a: 'typing.Any'
    Black: 'FLinearColor'
    Blue: 'FLinearColor'
    Gray: 'FLinearColor'
    Green: 'FLinearColor'
    Red: 'FLinearColor'
    White: 'FLinearColor'
    Yellow: 'FLinearColor'



class FQuat:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def __sub__(*args, **kwargs) -> 'typing.Any': ...
    def __rsub__(*args, **kwargs) -> 'typing.Any': ...
    def __mul__(*args, **kwargs) -> 'typing.Any': ...
    def __rmul__(*args, **kwargs) -> 'typing.Any': ...
    def __divmod__(*args, **kwargs) -> 'typing.Any': ...
    def __rdivmod__(*args, **kwargs) -> 'typing.Any': ...
    def __len__(*args, **kwargs) -> 'typing.Any': ...
    def __getitem__(*args, **kwargs) -> 'typing.Any': ...
    def angular_distance(*args, **kwargs) -> 'typing.Any': ...
    def euler(*args, **kwargs) -> 'typing.Any': ...
    def rotator(*args, **kwargs) -> 'typing.Any': ...
    def get_axis_x(*args, **kwargs) -> 'typing.Any': ...
    def get_axis_y(*args, **kwargs) -> 'typing.Any': ...
    def get_axis_z(*args, **kwargs) -> 'typing.Any': ...
    def get_forward_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_right_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_up_vector(*args, **kwargs) -> 'typing.Any': ...
    def inverse(*args, **kwargs) -> 'typing.Any': ...
    def vector(*args, **kwargs) -> 'typing.Any': ...
    def get_normalized(*args, **kwargs) -> 'typing.Any': ...
    x: 'typing.Any'
    y: 'typing.Any'
    z: 'typing.Any'
    w: 'typing.Any'



class FFrameNumber:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class FRandomStream:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def frand(*args, **kwargs) -> 'typing.Any': ...
    def frand_range(*args, **kwargs) -> 'typing.Any': ...
    def generate_new_seed(*args, **kwargs) -> 'typing.Any': ...
    def get_current_seed(*args, **kwargs) -> 'typing.Any': ...
    def get_fraction(*args, **kwargs) -> 'typing.Any': ...
    def get_initial_seed(*args, **kwargs) -> 'typing.Any': ...
    def get_unit_vector(*args, **kwargs) -> 'typing.Any': ...
    def get_unsigned_int(*args, **kwargs) -> 'typing.Any': ...
    def initialize(*args, **kwargs) -> 'typing.Any': ...
    def rand_helper(*args, **kwargs) -> 'typing.Any': ...
    def rand_range(*args, **kwargs) -> 'typing.Any': ...
    def reset(*args, **kwargs) -> 'typing.Any': ...
    def vrand(*args, **kwargs) -> 'typing.Any': ...
    def vrand_cone(*args, **kwargs) -> 'typing.Any': ...



class FRawAnimSequenceTrack:
    pos_keys: 'typing.Any'
    rot_keys: 'typing.Any'
    scale_keys: 'typing.Any'



class FSoftSkinVertex:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def copy(*args, **kwargs) -> 'typing.Any': ...
    color: 'typing.Any'
    influence_bones: 'typing.Any'
    influence_weights: 'typing.Any'
    position: 'typing.Any'
    tangent_x: 'typing.Any'
    tangent_y: 'typing.Any'
    tangent_z: 'typing.Any'
    uvs: 'typing.Any'
    material_index: 'typing.Any'
    smoothing_group: 'typing.Any'



class FMorphTargetDelta:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    position_delta: 'typing.Any'
    tangent_z_delta: 'typing.Any'
    source_idx: 'typing.Any'



class FObjectThumbnail:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_image_width(*args, **kwargs) -> 'typing.Any': ...
    def get_image_height(*args, **kwargs) -> 'typing.Any': ...
    def get_compressed_data_size(*args, **kwargs) -> 'typing.Any': ...
    def get_uncompressed_image_data(*args, **kwargs) -> 'typing.Any': ...
    def compress_image_data(*args, **kwargs) -> 'typing.Any': ...



class FViewportClient:
    def get_world(*args, **kwargs) -> 'typing.Any': ...
    def is_in_game_view(*args, **kwargs) -> 'typing.Any': ...
    def is_ortho(*args, **kwargs) -> 'typing.Any': ...



class FEditorViewportClient:
    def take_high_res_screen_shot(*args, **kwargs) -> 'typing.Any': ...
    def tick(*args, **kwargs) -> 'typing.Any': ...
    def get_look_at_location(*args, **kwargs) -> 'typing.Any': ...
    def get_view_location(*args, **kwargs) -> 'typing.Any': ...
    def get_view_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_camera_speed(*args, **kwargs) -> 'typing.Any': ...
    def get_viewport_dimensions(*args, **kwargs) -> 'typing.Any': ...
    def is_visible(*args, **kwargs) -> 'typing.Any': ...
    def get_scene_depth_at_location(*args, **kwargs) -> 'typing.Any': ...
    def set_look_at_location(*args, **kwargs) -> 'typing.Any': ...
    def set_view_location(*args, **kwargs) -> 'typing.Any': ...
    def set_view_rotation(*args, **kwargs) -> 'typing.Any': ...
    def set_realtime(*args, **kwargs) -> 'typing.Any': ...



class IAssetEditorInstance:
    def close_window(*args, **kwargs) -> 'typing.Any': ...
    def focus_window(*args, **kwargs) -> 'typing.Any': ...
    def get_editor_name(*args, **kwargs) -> 'typing.Any': ...
    def get_last_activation_time(*args, **kwargs) -> 'typing.Any': ...



class FPythonOutputDevice:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class FTimerHandle:
    def clear(*args, **kwargs) -> 'typing.Any': ...
    def pause(*args, **kwargs) -> 'typing.Any': ...
    def unpause(*args, **kwargs) -> 'typing.Any': ...



class FDelegateHandle:
    pass



class FSocket:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def start_receiver(*args, **kwargs) -> 'typing.Any': ...
    def stop_receiver(*args, **kwargs) -> 'typing.Any': ...
    def close(*args, **kwargs) -> 'typing.Any': ...



class Callable:
    def __call__(*args, **kwargs) -> 'typing.Any': ...



class UScriptStruct:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...
    def __setattr__(*args, **kwargs) -> 'typing.Any': ...
    def __delattr__(*args, **kwargs) -> 'typing.Any': ...
    def __lt__(*args, **kwargs) -> 'typing.Any': ...
    def __le__(*args, **kwargs) -> 'typing.Any': ...
    def __eq__(*args, **kwargs) -> 'typing.Any': ...
    def __ne__(*args, **kwargs) -> 'typing.Any': ...
    def __gt__(*args, **kwargs) -> 'typing.Any': ...
    def __ge__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_field(*args, **kwargs) -> 'typing.Any': ...
    def set_field(*args, **kwargs) -> 'typing.Any': ...
    def get_field_array_dim(*args, **kwargs) -> 'typing.Any': ...
    def fields(*args, **kwargs) -> 'typing.Any': ...
    def get_struct(*args, **kwargs) -> 'typing.Any': ...
    def clone(*args, **kwargs) -> 'typing.Any': ...
    def as_dict(*args, **kwargs) -> 'typing.Any': ...
    def ref(*args, **kwargs) -> 'typing.Any': ...



class UClassesImporter:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...



class EnumsImporter:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...



class UStructsImporter:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...



class FoliageInstance:
    def get_instance_world_transform(*args, **kwargs) -> 'typing.Any': ...
    def align_to_normal(*args, **kwargs) -> 'typing.Any': ...
    location: 'typing.Any'
    draw_scale3d: 'typing.Any'
    flags: 'typing.Any'
    pre_align_rotation: 'typing.Any'
    rotation: 'typing.Any'
    zoffset: 'typing.Any'
    procedural_guid: 'typing.Any'
    guid: 'typing.Any'
    base_id: 'typing.Any'
    instance_id: 'typing.Any'
    base_component: 'typing.Any'



class FSlowTask:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def initialize(*args, **kwargs) -> 'typing.Any': ...
    def destroy(*args, **kwargs) -> 'typing.Any': ...
    def make_dialog_delayed(*args, **kwargs) -> 'typing.Any': ...
    def make_dialog(*args, **kwargs) -> 'typing.Any': ...
    def enter_progress_frame(*args, **kwargs) -> 'typing.Any': ...
    def get_current_message(*args, **kwargs) -> 'typing.Any': ...
    def received_user_cancel(*args, **kwargs) -> 'typing.Any': ...



class SWidget:
    def new_ref(*args, **kwargs) -> 'typing.Any': ...
    def get_shared_reference_count(*args, **kwargs) -> 'typing.Any': ...
    def get_cached_geometry(*args, **kwargs) -> 'typing.Any': ...
    def get_children(*args, **kwargs) -> 'typing.Any': ...
    def get_type(*args, **kwargs) -> 'typing.Any': ...
    def set_tooltip_text(*args, **kwargs) -> 'typing.Any': ...
    def set_cursor(*args, **kwargs) -> 'typing.Any': ...
    def set_enabled(*args, **kwargs) -> 'typing.Any': ...
    def has_keyboard_focus(*args, **kwargs) -> 'typing.Any': ...
    def invalidate(*args, **kwargs) -> 'typing.Any': ...
    def set_keyboard_focus(*args, **kwargs) -> 'typing.Any': ...
    def set_visibility(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_mouse_button_down(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_mouse_button_up(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_mouse_double_click(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_mouse_move(*args, **kwargs) -> 'typing.Any': ...
    def on_mouse_button_down(*args, **kwargs) -> 'typing.Any': ...
    def on_mouse_button_up(*args, **kwargs) -> 'typing.Any': ...
    def assign(*args, **kwargs) -> 'typing.Any': ...



class FARFilter:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def append(*args, **kwargs) -> 'typing.Any': ...
    def clear(*args, **kwargs) -> 'typing.Any': ...
    def is_empty(*args, **kwargs) -> 'typing.Any': ...
    class_names: 'typing.Any'
    object_paths: 'typing.Any'
    package_names: 'typing.Any'
    package_paths: 'typing.Any'
    recursive_classes_exclusion_set: 'typing.Any'
    tags_and_values: 'typing.Any'
    include_only_on_disk_assets: 'typing.Any'
    recursive_classes: 'typing.Any'
    recursive_paths: 'typing.Any'



class FAssetData:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_asset(*args, **kwargs) -> 'typing.Any': ...
    def is_asset_loaded(*args, **kwargs) -> 'typing.Any': ...
    def get_thumbnail(*args, **kwargs) -> 'typing.Any': ...
    def has_custom_thumbnail(*args, **kwargs) -> 'typing.Any': ...
    def has_cached_thumbnail(*args, **kwargs) -> 'typing.Any': ...
    asset_class: 'typing.Any'
    asset_name: 'typing.Any'
    object_path: 'typing.Any'
    package_flags: 'typing.Any'
    package_name: 'typing.Any'
    package_path: 'typing.Any'
    tags_and_values: 'typing.Any'



class EdGraphPin:
    def make_link_to(*args, **kwargs) -> 'typing.Any': ...
    def break_link_to(*args, **kwargs) -> 'typing.Any': ...
    def break_all_pin_links(*args, **kwargs) -> 'typing.Any': ...
    def get_linked_to(*args, **kwargs) -> 'typing.Any': ...
    def connect(*args, **kwargs) -> 'typing.Any': ...
    name: 'typing.Any'
    category: 'typing.Any'
    sub_category: 'typing.Any'
    default_value: 'typing.Any'
    default_text_value: 'typing.Any'
    default_object: 'typing.Any'



class FStringAssetReference:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_asset_name(*args, **kwargs) -> 'typing.Any': ...
    def get_long_package_name(*args, **kwargs) -> 'typing.Any': ...



class FSoftObjectPath:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_asset_name(*args, **kwargs) -> 'typing.Any': ...
    def get_long_package_name(*args, **kwargs) -> 'typing.Any': ...



class FbxManager:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_io_settings(*args, **kwargs) -> 'typing.Any': ...
    def create_missing_bind_poses(*args, **kwargs) -> 'typing.Any': ...



class FbxIOSettings:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class FbxImporter:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def initialize(*args, **kwargs) -> 'typing.Any': ...
    def _import(*args, **kwargs) -> 'typing.Any': ...
    def get_anim_stack_count(*args, **kwargs) -> 'typing.Any': ...
    def get_take_local_time_span(*args, **kwargs) -> 'typing.Any': ...



class FbxScene:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def convert(*args, **kwargs) -> 'typing.Any': ...
    def triangulate(*args, **kwargs) -> 'typing.Any': ...
    def get_root_node(*args, **kwargs) -> 'typing.Any': ...
    def get_src_object_count(*args, **kwargs) -> 'typing.Any': ...
    def get_src_object(*args, **kwargs) -> 'typing.Any': ...
    def get_pose_count(*args, **kwargs) -> 'typing.Any': ...
    def get_pose(*args, **kwargs) -> 'typing.Any': ...



class FbxNode:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_child_count(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def evaluate_local_transform(*args, **kwargs) -> 'typing.Any': ...
    def evaluate_global_transform(*args, **kwargs) -> 'typing.Any': ...
    def get_local_translation(*args, **kwargs) -> 'typing.Any': ...
    def get_local_rotation(*args, **kwargs) -> 'typing.Any': ...
    def get_local_scaling(*args, **kwargs) -> 'typing.Any': ...
    def get_child(*args, **kwargs) -> 'typing.Any': ...
    def get_parent(*args, **kwargs) -> 'typing.Any': ...
    def get_node_attribute(*args, **kwargs) -> 'typing.Any': ...
    def get_node_attribute_count(*args, **kwargs) -> 'typing.Any': ...
    def get_node_attribute_by_index(*args, **kwargs) -> 'typing.Any': ...
    def get_mesh(*args, **kwargs) -> 'typing.Any': ...



class FbxObject:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_member_count(*args, **kwargs) -> 'typing.Any': ...
    def get_member(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def to_node(*args, **kwargs) -> 'typing.Any': ...
    def get_class_name(*args, **kwargs) -> 'typing.Any': ...
    def get_first_property(*args, **kwargs) -> 'typing.Any': ...
    def get_next_property(*args, **kwargs) -> 'typing.Any': ...
    def get_channels_count(*args, **kwargs) -> 'typing.Any': ...
    def get_channel_name(*args, **kwargs) -> 'typing.Any': ...
    def get_curve_count(*args, **kwargs) -> 'typing.Any': ...
    def get_curve(*args, **kwargs) -> 'typing.Any': ...
    def key_get_count(*args, **kwargs) -> 'typing.Any': ...
    def key_get_value(*args, **kwargs) -> 'typing.Any': ...
    def key_get_seconds(*args, **kwargs) -> 'typing.Any': ...
    def key_get_left_tangent(*args, **kwargs) -> 'typing.Any': ...
    def key_get_right_tangent(*args, **kwargs) -> 'typing.Any': ...
    def key_get_interp_mode(*args, **kwargs) -> 'typing.Any': ...
    def key_get_tangent_mode(*args, **kwargs) -> 'typing.Any': ...



class FbxProperty:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def get_double3(*args, **kwargs) -> 'typing.Any': ...
    def get_string(*args, **kwargs) -> 'typing.Any': ...
    def get_bool(*args, **kwargs) -> 'typing.Any': ...
    def get_int(*args, **kwargs) -> 'typing.Any': ...
    def is_valid(*args, **kwargs) -> 'typing.Any': ...
    def get_curve_node(*args, **kwargs) -> 'typing.Any': ...



class FbxPose:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_count(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def get_node(*args, **kwargs) -> 'typing.Any': ...
    def is_bind_pose(*args, **kwargs) -> 'typing.Any': ...
    def is_rest_pose(*args, **kwargs) -> 'typing.Any': ...
    def find(*args, **kwargs) -> 'typing.Any': ...
    def get_transform(*args, **kwargs) -> 'typing.Any': ...



class FbxMesh:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def remove_bad_polygons(*args, **kwargs) -> 'typing.Any': ...
    def get_polygon_count(*args, **kwargs) -> 'typing.Any': ...
    def get_polygon_vertices(*args, **kwargs) -> 'typing.Any': ...
    def get_polygon_vertex_count(*args, **kwargs) -> 'typing.Any': ...
    def get_control_points_count(*args, **kwargs) -> 'typing.Any': ...
    def get_control_points(*args, **kwargs) -> 'typing.Any': ...
    def get_polygon_vertex_uvs(*args, **kwargs) -> 'typing.Any': ...
    def get_uv_set_names(*args, **kwargs) -> 'typing.Any': ...
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def get_polygon_vertex_normals(*args, **kwargs) -> 'typing.Any': ...



class FRawMesh:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_vertex_positions(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_indices(*args, **kwargs) -> 'typing.Any': ...
    def set_face_material_indices(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_tex_coords(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_tangent_x(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_tangent_y(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_tangent_z(*args, **kwargs) -> 'typing.Any': ...
    def set_wedge_colors(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_position(*args, **kwargs) -> 'typing.Any': ...
    def get_vertex_positions(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_indices(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_tex_coords(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_tangent_x(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_tangent_y(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_tangent_z(*args, **kwargs) -> 'typing.Any': ...
    def get_wedge_colors(*args, **kwargs) -> 'typing.Any': ...
    def get_face_material_indices(*args, **kwargs) -> 'typing.Any': ...
    def save_to_static_mesh_source_model(*args, **kwargs) -> 'typing.Any': ...
    def get_wedges_num(*args, **kwargs) -> 'typing.Any': ...



class IPlugin:
    def get_name(*args, **kwargs) -> 'typing.Any': ...
    def get_base_dir(*args, **kwargs) -> 'typing.Any': ...
    def get_content_dir(*args, **kwargs) -> 'typing.Any': ...
    def get_descriptor_file_name(*args, **kwargs) -> 'typing.Any': ...
    def get_mounted_asset_path(*args, **kwargs) -> 'typing.Any': ...
    def can_contain_content(*args, **kwargs) -> 'typing.Any': ...
    def is_enabled(*args, **kwargs) -> 'typing.Any': ...
    def to_json(*args, **kwargs) -> 'typing.Any': ...
    def from_json(*args, **kwargs) -> 'typing.Any': ...
    category: 'typing.Any'
    enabled_by_default: 'typing.Any'
    installed: 'typing.Any'
    is_beta_version: 'typing.Any'
    requires_build_platform: 'typing.Any'
    created_by: 'typing.Any'
    created_by_url: 'typing.Any'
    description: 'typing.Any'
    docs_url: 'typing.Any'
    file_version: 'typing.Any'
    friendly_name: 'typing.Any'
    marketplace_url: 'typing.Any'
    support_url: 'typing.Any'
    version: 'typing.Any'
    version_name: 'typing.Any'



class SCompoundWidget:
    def get_color_and_opacity(*args, **kwargs) -> 'typing.Any': ...
    def set_color_and_opacity(*args, **kwargs) -> 'typing.Any': ...



class SWindow:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __lshift__(*args, **kwargs) -> 'typing.Any': ...
    def __rlshift__(*args, **kwargs) -> 'typing.Any': ...
    def get_child_windows(*args, **kwargs) -> 'typing.Any': ...
    def set_title(*args, **kwargs) -> 'typing.Any': ...
    def get_title(*args, **kwargs) -> 'typing.Any': ...
    def set_sizing_rule(*args, **kwargs) -> 'typing.Any': ...
    def minimize(*args, **kwargs) -> 'typing.Any': ...
    def resize(*args, **kwargs) -> 'typing.Any': ...
    def set_client_size(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def get_handle(*args, **kwargs) -> 'typing.Any': ...
    def set_as_owner(*args, **kwargs) -> 'typing.Any': ...
    def request_destroy(*args, **kwargs) -> 'typing.Any': ...
    def bring_to_front(*args, **kwargs) -> 'typing.Any': ...
    def add_modal(*args, **kwargs) -> 'typing.Any': ...
    def add_child(*args, **kwargs) -> 'typing.Any': ...



class SBorder:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def clear_content(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def set_padding(*args, **kwargs) -> 'typing.Any': ...
    def set_h_align(*args, **kwargs) -> 'typing.Any': ...
    def set_v_align(*args, **kwargs) -> 'typing.Any': ...
    def set_border_image(*args, **kwargs) -> 'typing.Any': ...



class SButton:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def is_pressed(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_clicked(*args, **kwargs) -> 'typing.Any': ...



class SLeafWidget:
    pass



class STextBlock:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_color_and_opacity(*args, **kwargs) -> 'typing.Any': ...
    def set_text(*args, **kwargs) -> 'typing.Any': ...
    def get_text(*args, **kwargs) -> 'typing.Any': ...



class SEditableTextBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def select_all_text(*args, **kwargs) -> 'typing.Any': ...
    def clear_selection(*args, **kwargs) -> 'typing.Any': ...
    def get_selected_text(*args, **kwargs) -> 'typing.Any': ...
    def get_text(*args, **kwargs) -> 'typing.Any': ...
    def set_text(*args, **kwargs) -> 'typing.Any': ...



class SMultiLineEditableText:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def select_all_text(*args, **kwargs) -> 'typing.Any': ...
    def clear_selection(*args, **kwargs) -> 'typing.Any': ...
    def get_selected_text(*args, **kwargs) -> 'typing.Any': ...
    def get_text(*args, **kwargs) -> 'typing.Any': ...
    def set_text(*args, **kwargs) -> 'typing.Any': ...
    def get_plain_text(*args, **kwargs) -> 'typing.Any': ...



class SPanel:
    pass



class SGridPanel:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def clear_children(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...



class SBoxPanel:
    def clear_children(*args, **kwargs) -> 'typing.Any': ...



class SHorizontalBox:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...
    def num_slots(*args, **kwargs) -> 'typing.Any': ...



class SVerticalBox:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __add__(*args, **kwargs) -> 'typing.Any': ...
    def __radd__(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...
    def num_slots(*args, **kwargs) -> 'typing.Any': ...



class SViewport:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def enable_stereo_rendering(*args, **kwargs) -> 'typing.Any': ...



class SImage:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_brush(*args, **kwargs) -> 'typing.Any': ...
    def set_image(*args, **kwargs) -> 'typing.Any': ...
    def set_texture(*args, **kwargs) -> 'typing.Any': ...



class SDockTab:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_label(*args, **kwargs) -> 'typing.Any': ...
    def request_close_tab(*args, **kwargs) -> 'typing.Any': ...
    def new_tab_manager(*args, **kwargs) -> 'typing.Any': ...



class STableViewBase:
    def set_item_height(*args, **kwargs) -> 'typing.Any': ...
    def set_item_width(*args, **kwargs) -> 'typing.Any': ...
    def request_list_refresh(*args, **kwargs) -> 'typing.Any': ...



class SListView:
    pass



class SPythonListView:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_selected_items(*args, **kwargs) -> 'typing.Any': ...
    def get_num_items_selected(*args, **kwargs) -> 'typing.Any': ...
    def clear_selection(*args, **kwargs) -> 'typing.Any': ...
    def set_header_row(*args, **kwargs) -> 'typing.Any': ...
    def update_item_source_list(*args, **kwargs) -> 'typing.Any': ...



class SPythonMultiColumnTableRow:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class STreeView:
    def request_tree_refresh(*args, **kwargs) -> 'typing.Any': ...
    def clear_expanded_items(*args, **kwargs) -> 'typing.Any': ...



class SPythonTreeView:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_item_expansion(*args, **kwargs) -> 'typing.Any': ...



class SSplitter:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...



class SHeaderRow:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def add_column(*args, **kwargs) -> 'typing.Any': ...



class SCheckBox:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def is_checked(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def set_is_checked(*args, **kwargs) -> 'typing.Any': ...



class SNumericEntryBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SCanvas:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...
    def clear_children(*args, **kwargs) -> 'typing.Any': ...



class SSlider:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_value(*args, **kwargs) -> 'typing.Any': ...
    def get_value(*args, **kwargs) -> 'typing.Any': ...



class SVectorInputBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SRotatorInputBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SPythonComboBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def clear_selection(*args, **kwargs) -> 'typing.Any': ...
    def get_selected_item(*args, **kwargs) -> 'typing.Any': ...
    def set_selected_item(*args, **kwargs) -> 'typing.Any': ...



class SScrollBox:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def clear_children(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...



class SColorBlock:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SBox:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def set_height_override(*args, **kwargs) -> 'typing.Any': ...
    def set_width_override(*args, **kwargs) -> 'typing.Any': ...



class SProgressBar:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_percent(*args, **kwargs) -> 'typing.Any': ...



class SSpacer:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SPythonWidget:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_active(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def clear_content(*args, **kwargs) -> 'typing.Any': ...



class SOverlay:
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def add_slot(*args, **kwargs) -> 'typing.Any': ...
    def get_num_widgets(*args, **kwargs) -> 'typing.Any': ...



class SNodePanel:
    pass



class SGraphPanel:
    pass



class IDetailsView:
    def set_object(*args, **kwargs) -> 'typing.Any': ...



class IStructureDetailsView:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...
    def __setattr__(*args, **kwargs) -> 'typing.Any': ...
    def __delattr__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_structure_data(*args, **kwargs) -> 'typing.Any': ...
    def get_widget(*args, **kwargs) -> 'typing.Any': ...



class SEditorViewport:
    def enable_stereo_rendering(*args, **kwargs) -> 'typing.Any': ...



class SLevelViewport:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_world(*args, **kwargs) -> 'typing.Any': ...
    def set_show_bounds(*args, **kwargs) -> 'typing.Any': ...
    def set_show_stats(*args, **kwargs) -> 'typing.Any': ...
    def set_view_mode(*args, **kwargs) -> 'typing.Any': ...
    def set_exposure_settings(*args, **kwargs) -> 'typing.Any': ...



class SPythonEditorViewport:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def simulate(*args, **kwargs) -> 'typing.Any': ...
    def get_world(*args, **kwargs) -> 'typing.Any': ...
    def get_editor_viewport_client(*args, **kwargs) -> 'typing.Any': ...
    def set_show_bounds(*args, **kwargs) -> 'typing.Any': ...
    def set_show_stats(*args, **kwargs) -> 'typing.Any': ...
    def set_view_mode(*args, **kwargs) -> 'typing.Any': ...
    def set_exposure_settings(*args, **kwargs) -> 'typing.Any': ...
    def set_view_location(*args, **kwargs) -> 'typing.Any': ...
    def set_view_rotation(*args, **kwargs) -> 'typing.Any': ...
    def set_light_color(*args, **kwargs) -> 'typing.Any': ...
    def set_light_direction(*args, **kwargs) -> 'typing.Any': ...
    def set_light_brightness(*args, **kwargs) -> 'typing.Any': ...
    def set_sky_brightness(*args, **kwargs) -> 'typing.Any': ...
    def get_light(*args, **kwargs) -> 'typing.Any': ...



class SGraphEditor:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SPythonShelf:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SFilePathPicker:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SDirectoryPicker:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_directory(*args, **kwargs) -> 'typing.Any': ...
    def get_file_path(*args, **kwargs) -> 'typing.Any': ...



class SDropTarget:
    pass



class SAssetDropTarget:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class SObjectPropertyEntryBox:
    def __init__(*args, **kwargs) -> 'typing.Any': ...



class FTabManager:
    pass



class FTabSpawnerEntry:
    def set_display_name(*args, **kwargs) -> 'typing.Any': ...
    def set_tooltip_text(*args, **kwargs) -> 'typing.Any': ...



class FMenuBuilder:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def begin_section(*args, **kwargs) -> 'typing.Any': ...
    def end_section(*args, **kwargs) -> 'typing.Any': ...
    def make_widget(*args, **kwargs) -> 'typing.Any': ...
    def add_menu_entry(*args, **kwargs) -> 'typing.Any': ...
    def add_menu_separator(*args, **kwargs) -> 'typing.Any': ...
    def add_search_widget(*args, **kwargs) -> 'typing.Any': ...
    def add_sub_menu(*args, **kwargs) -> 'typing.Any': ...
    def add_asset_actions(*args, **kwargs) -> 'typing.Any': ...



class FSlateStyleSet:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def set_content_root(*args, **kwargs) -> 'typing.Any': ...
    def set(*args, **kwargs) -> 'typing.Any': ...
    def get(*args, **kwargs) -> 'typing.Any': ...
    def register(*args, **kwargs) -> 'typing.Any': ...



class FToolBarBuilder:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def begin_section(*args, **kwargs) -> 'typing.Any': ...
    def end_section(*args, **kwargs) -> 'typing.Any': ...
    def add_tool_bar_button(*args, **kwargs) -> 'typing.Any': ...
    def add_separator(*args, **kwargs) -> 'typing.Any': ...
    def begin_block_group(*args, **kwargs) -> 'typing.Any': ...
    def end_block_group(*args, **kwargs) -> 'typing.Any': ...
    def make_widget(*args, **kwargs) -> 'typing.Any': ...



class FSlateIcon:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_icon(*args, **kwargs) -> 'typing.Any': ...



class FGeometry:
    def get_local_size(*args, **kwargs) -> 'typing.Any': ...
    def get_absolute_position(*args, **kwargs) -> 'typing.Any': ...
    def absolute_to_local(*args, **kwargs) -> 'typing.Any': ...



class FPaintContext:
    def get_geometry(*args, **kwargs) -> 'typing.Any': ...
    def draw_line(*args, **kwargs) -> 'typing.Any': ...
    def draw_box(*args, **kwargs) -> 'typing.Any': ...
    def draw_lines(*args, **kwargs) -> 'typing.Any': ...
    def draw_spline(*args, **kwargs) -> 'typing.Any': ...
    def draw_text(*args, **kwargs) -> 'typing.Any': ...



class FInputEvent:
    def to_text(*args, **kwargs) -> 'typing.Any': ...
    def get_user_index(*args, **kwargs) -> 'typing.Any': ...
    def is_alt_down(*args, **kwargs) -> 'typing.Any': ...
    def is_command_down(*args, **kwargs) -> 'typing.Any': ...
    def is_control_down(*args, **kwargs) -> 'typing.Any': ...



class FPointerEvent:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_effecting_button(*args, **kwargs) -> 'typing.Any': ...
    def get_effecting_button_name(*args, **kwargs) -> 'typing.Any': ...
    def get_wheel_delta(*args, **kwargs) -> 'typing.Any': ...
    def get_cursor_delta(*args, **kwargs) -> 'typing.Any': ...
    def get_screen_space_position(*args, **kwargs) -> 'typing.Any': ...



class FKeyEvent:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_key(*args, **kwargs) -> 'typing.Any': ...
    def get_key_name(*args, **kwargs) -> 'typing.Any': ...



class FCharacterEvent:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_character(*args, **kwargs) -> 'typing.Any': ...



class FModifierKeysState:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def are_caps_locked(*args, **kwargs) -> 'typing.Any': ...



class ESlateEnums:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    val: 'typing.Any'



class IHttpBase:
    def get_content(*args, **kwargs) -> 'typing.Any': ...
    def get_all_headers(*args, **kwargs) -> 'typing.Any': ...
    def get_content_length(*args, **kwargs) -> 'typing.Any': ...
    def get_content_type(*args, **kwargs) -> 'typing.Any': ...
    def get_header(*args, **kwargs) -> 'typing.Any': ...
    def get_url(*args, **kwargs) -> 'typing.Any': ...
    def get_url_parameter(*args, **kwargs) -> 'typing.Any': ...



class IHttpRequest:
    def __getattribute__(*args, **kwargs) -> 'typing.Any': ...
    def __setattr__(*args, **kwargs) -> 'typing.Any': ...
    def __delattr__(*args, **kwargs) -> 'typing.Any': ...
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_process_request_complete(*args, **kwargs) -> 'typing.Any': ...
    def bind_on_request_progress(*args, **kwargs) -> 'typing.Any': ...
    def append_to_header(*args, **kwargs) -> 'typing.Any': ...
    def cancel_request(*args, **kwargs) -> 'typing.Any': ...
    def get_elapsed_time(*args, **kwargs) -> 'typing.Any': ...
    def get_response(*args, **kwargs) -> 'typing.Any': ...
    def get_status(*args, **kwargs) -> 'typing.Any': ...
    def get_verb(*args, **kwargs) -> 'typing.Any': ...
    def process_request(*args, **kwargs) -> 'typing.Any': ...
    def set_content(*args, **kwargs) -> 'typing.Any': ...
    def set_header(*args, **kwargs) -> 'typing.Any': ...
    def set_url(*args, **kwargs) -> 'typing.Any': ...
    def set_verb(*args, **kwargs) -> 'typing.Any': ...
    def tick(*args, **kwargs) -> 'typing.Any': ...



class IHttpResponse:
    def get_response_code(*args, **kwargs) -> 'typing.Any': ...
    def get_content_as_string(*args, **kwargs) -> 'typing.Any': ...



class IConsoleManager:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_history(*args, **kwargs) -> 'typing.Any': ...
    def add_history_entry(*args, **kwargs) -> 'typing.Any': ...
    def get_objects(*args, **kwargs) -> 'typing.Any': ...
    def get_objects_starting_with(*args, **kwargs) -> 'typing.Any': ...
    def get_objects_containing(*args, **kwargs) -> 'typing.Any': ...
    def get_help(*args, **kwargs) -> 'typing.Any': ...
    def set_help(*args, **kwargs) -> 'typing.Any': ...
    def get_int(*args, **kwargs) -> 'typing.Any': ...
    def get_float(*args, **kwargs) -> 'typing.Any': ...
    def get_string(*args, **kwargs) -> 'typing.Any': ...
    def set_int(*args, **kwargs) -> 'typing.Any': ...
    def set_float(*args, **kwargs) -> 'typing.Any': ...
    def set_string(*args, **kwargs) -> 'typing.Any': ...
    def is_variable(*args, **kwargs) -> 'typing.Any': ...
    def is_command(*args, **kwargs) -> 'typing.Any': ...
    def is_variable_string(*args, **kwargs) -> 'typing.Any': ...
    def is_variable_float(*args, **kwargs) -> 'typing.Any': ...
    def is_variable_int(*args, **kwargs) -> 'typing.Any': ...
    def is_name_registered(*args, **kwargs) -> 'typing.Any': ...
    def unregister_object(*args, **kwargs) -> 'typing.Any': ...
    def register_variable_string(*args, **kwargs) -> 'typing.Any': ...
    def register_variable_int(*args, **kwargs) -> 'typing.Any': ...
    def register_variable_float(*args, **kwargs) -> 'typing.Any': ...
    def register_command(*args, **kwargs) -> 'typing.Any': ...



class FSlateApplication:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def create(*args, **kwargs) -> 'typing.Any': ...
    def get_average_delta_time(*args, **kwargs) -> 'typing.Any': ...
    def get_cursor_radius(*args, **kwargs) -> 'typing.Any': ...
    def get_delta_time(*args, **kwargs) -> 'typing.Any': ...
    def get_modifier_keys(*args, **kwargs) -> 'typing.Any': ...
    def goto_line_in_source(*args, **kwargs) -> 'typing.Any': ...
    def is_gamepad_attached(*args, **kwargs) -> 'typing.Any': ...
    def is_mouse_attached(*args, **kwargs) -> 'typing.Any': ...
    def process_key_down_event(*args, **kwargs) -> 'typing.Any': ...
    def process_key_char_event(*args, **kwargs) -> 'typing.Any': ...
    def set_application_scale(*args, **kwargs) -> 'typing.Any': ...
    def set_all_user_focus(*args, **kwargs) -> 'typing.Any': ...
    def set_cursor_pos(*args, **kwargs) -> 'typing.Any': ...
    def get_active_top_level_window(*args, **kwargs) -> 'typing.Any': ...



class FMaterialEditorUtilities:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def paste_nodes_here(*args, **kwargs) -> 'typing.Any': ...
    def update_material_after_graph_change(*args, **kwargs) -> 'typing.Any': ...
    def command_apply(*args, **kwargs) -> 'typing.Any': ...



class ICollectionManager:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def get_collections(*args, **kwargs) -> 'typing.Any': ...
    def get_root_collections(*args, **kwargs) -> 'typing.Any': ...
    def get_child_collections(*args, **kwargs) -> 'typing.Any': ...
    def get_root_collection_names(*args, **kwargs) -> 'typing.Any': ...
    def get_collection_names(*args, **kwargs) -> 'typing.Any': ...
    def create_static_collection(*args, **kwargs) -> 'typing.Any': ...
    def create_dynamic_collection(*args, **kwargs) -> 'typing.Any': ...
    def create_collection(*args, **kwargs) -> 'typing.Any': ...
    def reparent_collection(*args, **kwargs) -> 'typing.Any': ...
    def rename_collection(*args, **kwargs) -> 'typing.Any': ...
    def add_to_collection(*args, **kwargs) -> 'typing.Any': ...
    def collection_exists(*args, **kwargs) -> 'typing.Any': ...
    def create_unique_collection_name(*args, **kwargs) -> 'typing.Any': ...
    def destroy_collection(*args, **kwargs) -> 'typing.Any': ...
    def empty_collection(*args, **kwargs) -> 'typing.Any': ...
    def get_dynamic_query_text(*args, **kwargs) -> 'typing.Any': ...
    def set_dynamic_query_text(*args, **kwargs) -> 'typing.Any': ...
    def remove_from_collection(*args, **kwargs) -> 'typing.Any': ...
    def get_assets_in_collection(*args, **kwargs) -> 'typing.Any': ...
    def get_objects_in_collection(*args, **kwargs) -> 'typing.Any': ...
    def get_classes_in_collection(*args, **kwargs) -> 'typing.Any': ...
    def get_parent_collection(*args, **kwargs) -> 'typing.Any': ...
    def has_collections(*args, **kwargs) -> 'typing.Any': ...



class IVoiceCapture:
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def start(*args, **kwargs) -> 'typing.Any': ...
    def stop(*args, **kwargs) -> 'typing.Any': ...
    def shutdown(*args, **kwargs) -> 'typing.Any': ...
    def init(*args, **kwargs) -> 'typing.Any': ...
    def is_capturing(*args, **kwargs) -> 'typing.Any': ...
    def get_capture_state(*args, **kwargs) -> 'typing.Any': ...
    def get_voice_data(*args, **kwargs) -> 'typing.Any': ...



ENGINE_MAJOR_VERSION: 'int'

ENGINE_MINOR_VERSION: 'int'

ENGINE_PATCH_VERSION: 'int'

COLLISION_CHANNEL_CAMERA: 'int'

COLLISION_CHANNEL_DESTRUCTIBLE: 'int'

COLLISION_CHANNEL_PAWN: 'int'

COLLISION_CHANNEL_PHYSICS_BODY: 'int'

COLLISION_CHANNEL_VEHICLE: 'int'

COLLISION_CHANNEL_VISIBILITY: 'int'

COLLISION_CHANNEL_WORLD_DYNAMIC: 'int'

COLLISION_CHANNEL_WORLD_STATIC: 'int'

ATTACHMENT_RULE_KEEP_RELATIVE: 'int'

ATTACHMENT_RULE_KEEP_WORLD: 'int'

ATTACHMENT_RULE_SNAP_TO_TARGET: 'int'

IE_AXIS: 'int'

IE_DOUBLE_CLICK: 'int'

IE_PRESSED: 'int'

IE_RELEASED: 'int'

IE_REPEAT: 'int'

CLASS_CONFIG: 'int'

CLASS_DEFAULT_CONFIG: 'int'

CLASS_ABSTRACT: 'int'

CLASS_INTERFACE: 'int'

RF_NOFLAGS: 'int'

RF_PUBLIC: 'int'

RF_STANDALONE: 'int'

RF_MARKASNATIVE: 'int'

RF_TRANSACTIONAL: 'int'

RF_CLASSDEFAULTOBJECT: 'int'

RF_CLASS_DEFAULT_OBJECT: 'int'

RF_ARCHETYPEOBJECT: 'int'

RF_ARCHETYPE_OBJECT: 'int'

RF_TRANSIENT: 'int'

RF_MARKASROOTSET: 'int'

RF_TAGGARBAGETEMP: 'int'

RF_NEEDINITIALIZATION: 'int'

RF_NEEDLOAD: 'int'

RF_KEEPFORCOOKER: 'int'

RF_NEEDPOSTLOAD: 'int'

RF_NEEDPOSTLOADSUBOBJECTS: 'int'

RF_NEWERVERSIONEXISTS: 'int'

RF_BEGINDESTROYED: 'int'

RF_FINISHDESTROYED: 'int'

RF_BEINGREGENERATED: 'int'

RF_DEFAULTSUBOBJECT: 'int'

RF_WASLOADED: 'int'

RF_TEXTEXPORTTRANSIENT: 'int'

RF_LOADCOMPLETED: 'int'

RF_INHERITABLECOMPONENTTEMPLATE: 'int'

RF_DUPLICATETRANSIENT: 'int'

RF_STRONGREFONFRAME: 'int'

RF_NONPIEDUPLICATETRANSIENT: 'int'

RF_DYNAMIC: 'int'

RF_WILLBELOADED: 'int'

CPF_CONFIG: 'int'

CPF_GLOBAL_CONFIG: 'int'

CPF_EXPOSE_ON_SPAWN: 'int'

CPF_NET: 'int'

CPF_REP_NOTIFY: 'int'

APP_MSG_TYPE_OK: 'int'

APP_MSG_TYPE_YES_NO: 'int'

APP_MSG_TYPE_OK_CANCEL: 'int'

APP_MSG_TYPE_YES_NO_CANCEL: 'int'

APP_MSG_TYPE_CANCEL_RETRY_CONTINUE: 'int'

APP_MSG_TYPE_YES_NO_YES_ALL_NO_ALL: 'int'

APP_MSG_TYPE_YES_NO_YES_ALL_NO_ALL_CANCEL: 'int'

APP_MSG_TYPE_YES_NO_YES_ALL: 'int'

APP_RETURN_TYPE_OK: 'int'

APP_RETURN_TYPE_YES: 'int'

APP_RETURN_TYPE_YES_ALL: 'int'

APP_RETURN_TYPE_NO_ALL: 'int'

APP_RETURN_TYPE_NO: 'int'

APP_RETURN_TYPE_RETRY: 'int'

APP_RETURN_TYPE_CONTINUE: 'int'

APP_RETURN_TYPE_CANCEL: 'int'

class event:
    __module__: 'str'
    def __init__(*args, **kwargs) -> 'typing.Any': ...
    def __call__(*args, **kwargs) -> 'typing.Any': ...
    __dict__: 'typing.Any'



